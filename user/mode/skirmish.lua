--- 离线重生模式

local SkirmishMode = class("SkirmishMode")

GameMode()

function SkirmishMode:ctor()
    self.modName = "遭遇战（重生战）"
    self.author = "超级哆啦酱"
    self.description = "遭遇战"
end

function SkirmishMode:GetGameModeName(userLang)
    if userLang == "EN" then
        return "Skirmish"
    else
        return "遭遇战"
    end
end

function SkirmishMode:IsProxyBattle()
    return true
end

--- 初始化数据
function SkirmishMode:InitData()
    self.TeamAStartPoints = {}
    self.TeamBStartPoints = {}
    self.FriendBotVehicleList = {}
    self.EnemyBotVehicleList = {}
    self.TeamACount = 0
    self.TeamBCount = 0
    self.TeamAMaxNumber = 5
    self.TeamBMaxNumber = 5
    self.FriendScore = 0
    self.EnemyScore = 0
    self.customVehicleList = nil
    self.isPopEnd = false -- 防止结算界面重复出现
    self.isInMode = false
end

--- The view code is generated by tool automatically. Please do not modifiy it mannually.
function SkirmishMode:InitUI(root)
    --- @type GameObject
    self.vStartup = root:Find("#obj_Startup").gameObject
    --- @type InputField
    self.vFriendNumber = root:Find("#obj_Startup/Options/FriendNumber/#input_FriendNumber"):GetComponent("InputField")
    --- @type InputField
    self.vEnemyNumber = root:Find("#obj_Startup/Options/EnemyNumber/#input_EnemyNumber"):GetComponent("InputField")
    --- @type InputField
    self.vUpperRank = root:Find("#obj_Startup/Options/UpperRank/#input_UpperRank"):GetComponent("InputField")
    --- @type InputField
    self.vLowerRank = root:Find("#obj_Startup/Options/LowerRank/#input_LowerRank"):GetComponent("InputField")
    --- @type InputField
    self.vEnemyRankOffSet = root:Find("#obj_Startup/Options/EnemyRankOffSet/#input_EnemyRankOffSet"):GetComponent(
        "InputField")
    --- @type InputField
    self.vMaxRandomPool = root:Find("#obj_Startup/Options/MaxRandomPool/#input_MaxRandomPool"):GetComponent("InputField")
    --- @type InputField
    self.vScoreToFinish = root:Find("#obj_Startup/Options/ScoreToFinish/#input_ScoreToFinish"):GetComponent("InputField")
    --- @type Button
    self.vCustomVehicleList = root:Find("#obj_Startup/Options/CustomVehicleList/#btn_CustomVehicleList"):GetComponent(
        "Button")
    --- @type Button
    self.vStartBattle = root:Find("#obj_Startup/Options/StartBattle/#btn_StartBattle"):GetComponent("Button")
    --- @type Text
    self.vScore = root:Find("ScoreBar/#txt_Score"):GetComponent("Text")
    --- @type GameObject
    self.vFinishBar = root:Find("#obj_FinishBar").gameObject
    --- @type Text
    self.vWin = root:Find("#obj_FinishBar/#txt_Win"):GetComponent("Text")
    --- @type Text
    self.vLose = root:Find("#obj_FinishBar/#txt_Lose"):GetComponent("Text")
    --- @type Button
    self.vContinue = root:Find("#obj_FinishBar/#btn_Continue"):GetComponent("Button")
    --- @type Button
    self.vEnd = root:Find("#obj_FinishBar/#btn_End"):GetComponent("Button")
end

--- 初始化模式逻辑
--- Initialize the mode logic
function SkirmishMode:InitMode()
    -- 寻找出生点
    -- Find spawn points
    self.TeamAStartPoints = GameObject.FindGameObjectsWithTag("TeamAStartPoint")
    self.TeamBStartPoints = GameObject.FindGameObjectsWithTag("TeamBStartPoint")
    URPMainUIManager.Instance.audioListener.enabled = true     -- 打开界面 Audio Listener 防止警告
    -- Enable Audio Listener in the interface to prevent warnings
    URPMainUIManager.Instance.selectVehicleBar:SetActive(true) -- 打开选车界面
    -- Enable vehicle selection interface

    -- 结束战斗比分
    -- Set the score to finish the battle
    self.scoreToFinish = tonumber(self.vScoreToFinish.text)

    -- 设置敌我最大人数
    -- Set the maximum number of friends and enemies
    local firendNumber = tonumber(self.vFriendNumber.text)
    local enemyNumber = tonumber(self.vEnemyNumber.text)

    if GameDataManager.PlayerTeam == TeamManager.Team.red then
        self.TeamAMaxNumber = firendNumber
        self.TeamBMaxNumber = enemyNumber
    else
        self.TeamAMaxNumber = enemyNumber
        self.TeamBMaxNumber = firendNumber
    end

    -- 设置对战等级区间
    -- Set the level range for battles
    local lowerRank = tonumber(self.vLowerRank.text)
    local upperRank = tonumber(self.vUpperRank.text)

    -- 玩家的坦克
    -- Player's tank
    local playerVehicle = VehicleInfoManager.Instance:GetVehicleInfo(URPCustomModeOfflineManager.PlayerVehicleName)

    -- 坦克池，资源预热防止战斗卡顿，越大越吃内存
    -- Tank pool, resource preheating to prevent battle stuttering, the larger the more memory consumed
    local maxRandomPoolCount = tonumber(self.vMaxRandomPool.text)

    local availableVehicleList = nil
    local enemyAvailableVehicleList = nil

    if self.customVehicleList == nil or self.customVehicleList.Count == 0 then
        -- 寻找合适的载具
        -- Find suitable vehicles
        --- @type VehicleInfo[]
        availableVehicleList = VehicleInfoManager.Instance:GetAllDriveableVehicleList():FindAll(
            function(x)
                return playerVehicle:GetRank() - lowerRank <= x:GetRank() and
                    x:GetRank() <= playerVehicle:GetRank() + upperRank
            end
        )

        local enemyRank = playerVehicle:GetRank() + tonumber(self.vEnemyRankOffSet.text)
        enemyAvailableVehicleList = VehicleInfoManager.Instance:GetAllDriveableVehicleList():FindAll(
            function(x)
                return enemyRank - lowerRank <= x:GetRank() and x:GetRank() <= enemyRank + upperRank
            end
        )
    else
        local tmpVehicleList = CSharpAPI.GetNewVehicleInfoList()

        for k, v in pairs(self.customVehicleList) do
            tmpVehicleList:Add(VehicleInfoManager.Instance:GetVehicleInfo(v))
        end

        availableVehicleList = tmpVehicleList
        enemyAvailableVehicleList = tmpVehicleList
    end

    -- 通知创建载具列表
    -- Notify to create vehicle list
    URPMainUIManager.Instance:CreateVehicleUIs(playerVehicle, availableVehicleList)

    -- 载具选择后的回调
    -- Callback after vehicle selection
    URPMainUIManager.Instance.OnVehicleSelected:AddListener(
        function(vehicleInfo)
            URPMainUIManager.Instance.selectVehicleBar:SetActive(false)
            self:CreatePlayerVehicle(vehicleInfo)
        end
    )

    -- 载具被击毁的回调
    -- Callback when a vehicle is destroyed
    GameEventManager.OnNewVehicleDestroyed:AddListener(
        function(destroyedVehicle)
            --- Bot 被击毁，更新逻辑
            --- Bot destroyed, update logic
            if Core.BaseInitSystem.IsLocalPlayer(destroyedVehicle._InstanceNetType) == false then
                if destroyedVehicle.ownerTeam == TeamManager.Team.red then
                    self.TeamACount = self.TeamACount - 1
                else
                    self.TeamBCount = self.TeamBCount - 1
                end
            end

            self:UpdateScore(destroyedVehicle)
            self:UpdateModeLogic()
        end
    )

    -- 载具物体清除的回调
    -- Callback when a vehicle object is removed
    GameEventManager.OnNewVehicleRemoved:AddListener(
        function(destroyedVehicle)
            if self.isInMode then
                if Core.BaseInitSystem.IsLocalPlayer(destroyedVehicle._InstanceNetType) == true then
                    --- 玩家死亡，显示选车界面
                    --- Player dies, show vehicle selection interface
                    AudioListener.volume = 0

                    URPMainUIManager.Instance.audioListener.enabled = true
                    URPMainUIManager.Instance.backgroundCamera.enabled = true

                    URPMainUIManager.Instance.selectVehicleBar:SetActive(true)
                    MouseLockModule.Instance:Show()
                end
            end
        end
    )

    -- Bot 列表
    -- Bot list
    self.FriendBotVehicleList = CSharpAPI.GetBotVehicleList(availableVehicleList, maxRandomPoolCount)
    self.EnemyBotVehicleList = CSharpAPI.GetBotVehicleList(enemyAvailableVehicleList, maxRandomPoolCount)
    self:UpdateModeLogic()
end

function SkirmishMode:OnStartMode()
    self:InitData()
    self.isInMode = true
    CSharpAPI.LoadAssetBundle(
        "luaskirmish",
        "mod",
        function(asset)
            if asset ~= nil then
                local go = GameObject.Instantiate(asset)
                self.instanceGo = go
                self:InitUI(go.transform)

                self.customVehicleList = CSharpAPI.GetNewStringList()

                self.vStartBattle.onClick:AddListener(
                    function()
                        self.vStartup:SetActive(false)
                        self:InitMode()
                    end
                )

                local vehicleList = VehicleInfoManager.Instance:GetAllDriveableVehicleList()

                self.vCustomVehicleList.onClick:AddListener(function()
                    UIManager.Instance:ShowUI(UIEnum.BANPICK_UI, function(ctrl)
                        ctrl:InitBanPickInfo(self.customVehicleList, vehicleList)
                        ctrl:onSaveCallBack():AddListener(function()

                        end)
                    end)
                end)
            end
        end
    )
end

function SkirmishMode:OnExitMode()
    self.isInMode = false
end

--- Logic 战斗结束
--- Logic Battle ends
--- @param isWin boolean 是否胜利
--- @param isWin boolean Whether it's a victory
function SkirmishMode:OnBattleEnd(isWin)
    if not self.isPopEnd then
        MouseLockModule.Instance:Show()
        Time.timeScale = 0

        self.vFinishBar:SetActive(true)

        if isWin then
            self.vWin.gameObject:SetActive(true)
        else
            self.vLose.gameObject:SetActive(true)
        end

        self.vContinue.onClick:AddListener(
            function()
                Time.timeScale = 1
                self.vFinishBar:SetActive(false)
            end
        )

        self.vEnd.onClick:AddListener(
            function()
                Time.timeScale = 1
                CSharpAPI.OnLuaExitModeReq:Invoke()
                GameObject.Destroy(self.instanceGo)
            end
        )
    end

    self.isPopEnd = true
end

--- 更新比分
--- Update the score
function SkirmishMode:UpdateScore(destroyedVehicle)
    local ownerTeam = destroyedVehicle.ownerTeam
    if ownerTeam == GameDataManager.PlayerTeam then
        self.EnemyScore = self.EnemyScore + 1
    else
        self.FriendScore = self.FriendScore + 1
    end

    self.vScore.text = tostring(self.FriendScore) .. ":" .. tostring(self.EnemyScore)

    -- 胜负条件
    -- Win or lose conditions
    if self.FriendScore >= self.scoreToFinish then
        self:OnBattleEnd(true)
    end

    if self.EnemyScore >= self.scoreToFinish then
        self:OnBattleEnd(false)
    end
end

--- 模式核心逻辑，循环遍历人数，补充缺失人数
--- Core logic of the mode, looping through the number of people, and filling in the missing ones
function SkirmishMode:UpdateModeLogic()
    if self.FriendBotVehicleList.Count ~= 0 and self.EnemyBotVehicleList.Count ~= 0 then
        if self.TeamACount < self.TeamAMaxNumber then
            local delta = self.TeamAMaxNumber - self.TeamACount - 1
            for i = 1, 1 + delta do
                self.TeamACount = self.TeamACount + 1
                self:CreateBotVehicle(TeamManager.Team.red)
            end
        end
        if self.TeamBCount < self.TeamBMaxNumber then
            local delta = self.TeamBMaxNumber - self.TeamBCount - 1
            for i = 1, 1 + delta do
                self.TeamBCount = self.TeamBCount + 1
                self:CreateBotVehicle(TeamManager.Team.blue)
            end
        end
    end
end

--- 创建玩家载具
--- Create player vehicle
--- @param vehicleInfo VehicleInfo
function SkirmishMode:CreatePlayerVehicle(vehicleInfo)
    local startPoints = nil
    if GameDataManager.PlayerTeam == TeamManager.Team.red then
        startPoints = self.TeamAStartPoints
    else
        startPoints = self.TeamBStartPoints
    end

    URPCustomModeOfflineManager.Instance.respawnPointModule:RequestTrans(
        startPoints,
        function(trans)
            if vehicleInfo.type == VehicleInfo.Type.Ground then
                local tankInitSystem =
                    CSharpAPI.CreateTankPlayer(vehicleInfo:GetVehicleName(), trans.position, trans.rotation)
                tankInitSystem.OnVehicleLoaded:AddListener(self.ClosePlayerUI)
            elseif vehicleInfo.type == VehicleInfo.Type.Aviation then
                local flightInitSystem =
                    CSharpAPI.CreateFlightPlayer(vehicleInfo:GetVehicleName(), trans.position, trans.rotation, false)
                flightInitSystem.OnVehicleLoaded:AddListener(self.ClosePlayerUI)
            end
        end,
        0,
        true
    )
end

function SkirmishMode:CreateBotVehicle(team)
    local startPoints = nil
    if team == TeamManager.Team.red then
        startPoints = self.TeamAStartPoints
    else
        startPoints = self.TeamBStartPoints
    end

    URPCustomModeOfflineManager.Instance.respawnPointModule:RequestTrans(
        startPoints,
        function(trans)
            local vehicleInfo = nil
            if team == GameDataManager.PlayerTeam then
                vehicleInfo = CSharpAPI.RandomVehicleFromList(self.FriendBotVehicleList)
            else
                vehicleInfo = CSharpAPI.RandomVehicleFromList(self.EnemyBotVehicleList)
            end

            if vehicleInfo.type == VehicleInfo.Type.Ground then
                CSharpAPI.CreateTankBot(vehicleInfo:GetVehicleName(), trans.position, trans.rotation, team)
            end
        end,
        0,
        true
    )
end

--- 关闭玩家界面
--- Close player UI
function SkirmishMode:ClosePlayerUI()
    AudioListener.volume = 1
    URPMainUIManager.Instance.audioListener.enabled = false
    URPMainUIManager.Instance.backgroundCamera.enabled = false
    MouseLockModule.Instance:Hide()
end

return SkirmishMode
